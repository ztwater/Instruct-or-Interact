[
    {
        "action": "INS",
        "label": "param",
        "inserted": "self,",
        "deleted": "",
        "type": "Method_Signature"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "operator_stack = []\n",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "for_stmt",
        "inserted": "for token in infix_tokens:\n            if self.is_operator(token):\n                while operator_stack and self.compare(token, operator_stack[-1]):\n                    self.postfix_stack.append(operator_stack.pop())\n                operator_stack.append(token)\n            else:\n                self.postfix_stack.append(token)\n",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "while_stmt",
        "inserted": "while operator_stack:\n            self.postfix_stack.append(operator_stack.pop())",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "infix_tokens",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "operator",
        "inserted": "=",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "trailer",
        "inserted": ".split",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "trailer",
        "inserted": "()",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "return_stmt",
        "inserted": "",
        "deleted": "return infix_expression",
        "type": "Logic"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "infix_expression",
        "deleted": "infix_expression",
        "type": "Move"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "expression",
        "deleted": "infix_expression",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "expression",
        "deleted": "infix_expression",
        "type": "Refactoring"
    }
]