[
    {
        "action": "INS",
        "label": "param",
        "inserted": "self,",
        "deleted": "",
        "type": "Method_Signature"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "missing_args = self.required - set(self.arguments.keys())\n",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "string:",
        "inserted": "\"\"\"\n        Parses the given command line argument string and invoke _convert_type to stores the parsed result in specific type in the arguments dictionary.\n        Checks for missing required arguments, if any, and returns False with the missing argument names, otherwise returns True.\n        :param command_string: str, command line argument string, formatted like \"python script.py --arg1=value1 -arg2 value2 --option1 -option2\"\n        :return tuple: (True, None) if parsing is successful, (False, missing_args) if parsing fails,\n            where missing_args is a set of the missing argument names which are str.\n        \"\"\"",
        "deleted": "",
        "type": "Documentation"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "missing_args",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "atom_expr",
        "inserted": "argument.startswith(\"--\")",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "atom_expr",
        "inserted": "argument.startswith(\"-\")",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "arg = argument[2:]\n",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "arg = argument[1:]\n",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "comparison",
        "inserted": "\"=\" in arg",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "operator",
        "inserted": ",",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "atom_expr",
        "inserted": "self.arguments[arg]",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "self",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "trailer",
        "inserted": ".arguments",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "self",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "trailer",
        "inserted": "._convert_type",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "self",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "trailer",
        "inserted": "._convert_type",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "arglist",
        "inserted": "key, value",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "key",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "operator",
        "inserted": ",",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "atom_expr",
        "inserted": "arguments_list.index(argument)",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "operator",
        "inserted": "+",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "arg",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "operator",
        "inserted": ",",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "expr_stmt",
        "inserted": "",
        "deleted": "arguments = {}",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "name",
        "inserted": "",
        "deleted": "key",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "number",
        "inserted": "",
        "deleted": "0",
        "type": "Logic"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "arguments",
        "deleted": "arguments",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "arguments",
        "deleted": "arguments",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "key_value",
        "deleted": "key_value",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "_convert_type",
        "deleted": "_convert_type",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "key_value",
        "deleted": "key_value",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "number",
        "inserted": "1",
        "deleted": "1",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "value",
        "deleted": "value",
        "type": "Move"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "command_string",
        "deleted": "argument_string",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "command_string",
        "deleted": "argument_string",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "missing_args",
        "deleted": "arguments",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "arguments_list",
        "deleted": "key_value",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "_convert_type",
        "deleted": "key_value",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "value",
        "deleted": "key_value",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "arg",
        "deleted": "argument",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "string",
        "inserted": "\"=\"",
        "deleted": "'='",
        "type": "Logic"
    }
]