[
    {
        "action": "INS",
        "label": "param",
        "inserted": "x,",
        "deleted": "",
        "type": "Method_Signature"
    },
    {
        "action": "INS",
        "label": "param",
        "inserted": "y",
        "deleted": "",
        "type": "Method_Signature"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "\"\"\"\n        Sweeps the given position.\n        :param x: The x coordinate of the position, int.\n        :param y: The y coordinate of the position, int.\n        :return: True if the player has won the game, False otherwise, if the game still continues, return the player map, list.\n        \"\"\"\n",
        "deleted": "",
        "type": "Documentation"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "self.player_map[x][y] = self.minesweeper_map[x][y]\n",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "if_stmt",
        "inserted": "if self.minesweeper_map[x][y] == 0:\n            visited = set()\n            self.explore(x, y, visited)\n",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "return self.check_won()\n",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "operator",
        "inserted": ",",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "comparison",
        "inserted": "self.minesweeper_map[x][y] == 'X'",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "self.player_map[x][y] = 'X'\n",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "return False\n",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "self",
        "deleted": "position",
        "type": "Refactoring"
    }
]