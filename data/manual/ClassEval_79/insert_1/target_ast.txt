file_input [0,678]
    classdef [0,677]
        name: SQLGenerator [6,18]
        suite [19,677]
            funcdef [24,677]
                name: insert [28,34]
                parameters [34,46]
                    param [35,40]
                        name: self [35,39]
                        operator: , [39,40]
                    param [41,45]
                        name: data [41,45]
                suite [47,677]
                    simple_stmt [56,449]
                        string: """         Generates an INSERT SQL statement based on the given data.         :param data: dict. The data to be inserted, in dictionary form where keys are field names and values are field values.         :return: str. The generated SQL statement.         >>> sql.insert({'key1': 'value1', 'key2': 'value2'})         "INSERT INTO table1 (key1, key2) VALUES ('value1', 'value2');"         """ [56,448]
                    simple_stmt [457,490]
                        expr_stmt [457,489]
                            name: columns [457,464]
                            operator: = [465,466]
                            atom_expr [467,489]
                                string: ', ' [467,471]
                                trailer [471,476]
                                    name: join [472,476]
                                trailer [476,489]
                                    atom_expr [477,488]
                                        name: data [477,481]
                                        trailer [481,486]
                                            name: keys [482,486]
                                        trailer [486,488]
                    simple_stmt [498,560]
                        expr_stmt [498,559]
                            name: values [498,504]
                            operator: = [505,506]
                            atom_expr [507,559]
                                string: ', ' [507,511]
                                trailer [511,516]
                                    name: join [512,516]
                                trailer [516,559]
                                    atom [517,558]
                                        testlist_comp [518,557]
                                            fstring [518,530]
                                                fstring_start: f" [518,520]
                                                fstring_string: ' [520,521]
                                                fstring_expr [521,528]
                                                    operator: { [521,522]
                                                    name: value [522,527]
                                                    operator: } [527,528]
                                                fstring_string: ' [528,529]
                                                fstring_end: " [529,530]
                                            sync_comp_for [531,557]
                                                name: value [535,540]
                                                atom_expr [544,557]
                                                    name: data [544,548]
                                                    trailer [548,555]
                                                        name: values [549,555]
                                                    trailer [555,557]
                    simple_stmt [568,648]
                        expr_stmt [568,647]
                            name: sql_statement [568,581]
                            operator: = [582,583]
                            fstring [584,647]
                                fstring_start: f" [584,586]
                                fstring_string: INSERT INTO  [586,598]
                                fstring_expr [598,615]
                                    operator: { [598,599]
                                    atom_expr [599,614]
                                        name: self [599,603]
                                        trailer [603,614]
                                            name: table_name [604,614]
                                    operator: } [614,615]
                                fstring_string:  ( [615,617]
                                fstring_expr [617,626]
                                    operator: { [617,618]
                                    name: columns [618,625]
                                    operator: } [625,626]
                                fstring_string: ) VALUES ( [626,636]
                                fstring_expr [636,644]
                                    operator: { [636,637]
                                    name: values [637,643]
                                    operator: } [643,644]
                                fstring_string: ); [644,646]
                                fstring_end: " [646,647]
                    simple_stmt [656,677]
                        return_stmt [656,676]
                            name: sql_statement [663,676]