[
    {
        "action": "INS",
        "label": "param",
        "inserted": "state,",
        "deleted": "",
        "type": "Method_Signature"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "\"\"\"\n        Find the blank block, then makes the board moves forward the given direction.\n        :param state: a 3*3 size list of Integer, stores the state before moving.\n        :param direction: str, only has 4 direction 'up', 'down', 'left', 'right'\n        :return new_state: a 3*3 size list of Integer, stores the state after moving.\n        \"\"\"\n",
        "deleted": "",
        "type": "Documentation"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "return new_state\n",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "expr_stmt",
        "inserted": "blank = self.find_blank(state)",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "trailer",
        "inserted": "[:]",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "state",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "operator",
        "inserted": "",
        "deleted": ",",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "expr_stmt",
        "inserted": "",
        "deleted": "blank = None",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "name",
        "inserted": "",
        "deleted": "i",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "atom_expr",
        "inserted": "",
        "deleted": "range(len(board))",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "name",
        "inserted": "",
        "deleted": "j",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "atom_expr",
        "inserted": "",
        "deleted": "range(len(board[i]))",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "operator",
        "inserted": "",
        "deleted": "==",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "string:",
        "inserted": "",
        "deleted": "' '",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "simple_stmt",
        "inserted": "",
        "deleted": "break\n",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "if_stmt",
        "inserted": "",
        "deleted": "if blank:\n                break\n",
        "type": "Logic"
    },
    {
        "action": "MOV",
        "label": "return_stmt",
        "inserted": "return board",
        "deleted": "return board",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "blank",
        "deleted": "blank",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "operator",
        "inserted": "=",
        "deleted": "=",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "atom_expr",
        "inserted": "board[i][j]",
        "deleted": "board[i][j]",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "i",
        "deleted": "i",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "j",
        "deleted": "j",
        "type": "Move"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "self",
        "deleted": "board",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "new_state",
        "deleted": "blank",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "new_state",
        "deleted": "board",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "self",
        "deleted": "board",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "find_blank",
        "deleted": "i",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "state",
        "deleted": "j",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "row",
        "deleted": "i",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "row",
        "deleted": "j",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "new_state",
        "deleted": "board",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "new_state",
        "deleted": "board",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "new_state",
        "deleted": "board",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "new_state",
        "deleted": "board",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "new_state",
        "deleted": "board",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "new_state",
        "deleted": "board",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "new_state",
        "deleted": "board",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "new_state",
        "deleted": "board",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "new_state",
        "deleted": "board",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "new_state",
        "deleted": "board",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "new_state",
        "deleted": "board",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "new_state",
        "deleted": "board",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "new_state",
        "deleted": "board",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "new_state",
        "deleted": "board",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "new_state",
        "deleted": "board",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "new_state",
        "deleted": "board",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "new_state",
        "deleted": "board",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "new_state",
        "deleted": "board",
        "type": "Refactoring"
    }
]