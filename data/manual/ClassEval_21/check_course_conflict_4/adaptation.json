[
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "\"\"\"\n        Before adding a new course, check if the new course time conflicts with any other course.\n        :param new_course: dict, information of the course, including 'start_time', 'end_time' and 'name'\n        :return: False if the new course time conflicts(including two courses have the same boundary time) with other courses, or True otherwise.\n        \"\"\"\n",
        "deleted": "",
        "type": "Documentation"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "self",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "trailer",
        "inserted": ".courses",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "atom",
        "inserted": "(new_course['end_time'] >= course['start_time'] and new_course['end_time'] <= course['end_time'])",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "comparison",
        "inserted": "new_course['start_time'] <= course['end_time']",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "trailer",
        "inserted": "['start_time']",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "trailer",
        "inserted": "['start_time']",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "existing_courses",
        "deleted": "existing_courses",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "new_course_time",
        "deleted": "new_course_time",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "course_time",
        "deleted": "course_time",
        "type": "Move"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "self",
        "deleted": "new_course_time",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "new_course",
        "deleted": "existing_courses",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "course",
        "deleted": "course_time",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "courses",
        "deleted": "existing_courses",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "operator",
        "inserted": ">=",
        "deleted": "==",
        "type": "Logic"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "new_course",
        "deleted": "new_course_time",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "course",
        "deleted": "course_time",
        "type": "Refactoring"
    }
]