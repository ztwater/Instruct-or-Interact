[
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "\"\"\"\n        change the time format as '%H:%M' and check the time is free or not in the classroom.\n        :param check_time: str, the time need to be checked\n        :return: True if the check_time does not conflict with every course time, or False otherwise.\n        \"\"\"\n",
        "deleted": "",
        "type": "Documentation"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "course",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "atom_expr",
        "inserted": "self.courses",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "start_time = datetime.strptime(course['start_time'], '%H:%M')\n",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "end_time = datetime.strptime(course['end_time'], '%H:%M')\n",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "start_time",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "operator",
        "inserted": "<=",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "operator",
        "inserted": "<=",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "check_time",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "operator",
        "inserted": ",",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "if_stmt",
        "inserted": "",
        "deleted": "if formatted_time in classroom_schedule:\n            return False\n        else:\n            return True",
        "type": "Logic"
    },
    {
        "action": "MOV",
        "label": "return_stmt",
        "inserted": "return True",
        "deleted": "return True",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "comparison",
        "inserted": "formatted_time in classroom_schedule",
        "deleted": "formatted_time in classroom_schedule",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "string",
        "inserted": "'%H:%M'",
        "deleted": "'%H:%M'",
        "type": "Move"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "self",
        "deleted": "time",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "check_time",
        "deleted": "classroom_schedule",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "datetime",
        "deleted": "time",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "strptime",
        "deleted": "strftime",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "end_time",
        "deleted": "classroom_schedule",
        "type": "Refactoring"
    }
]