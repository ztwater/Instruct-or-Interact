[
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "\"\"\"\n        Change the specified column in the Excel file to uppercase\n        :param N: int, The serial number of the column that want to change\n        :param save_file_name: str, source file name\n        :return:(int, str), The former is the return value of write_excel, while the latter is the saved file name of the processed data\n        >>> processor = ExcelProcessor()\n        >>> success, output_file = processor.process_excel_data(1, 'test_data.xlsx')\n        \"\"\"\n",
        "deleted": "",
        "type": "Documentation"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "writer.save()\n",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "return_stmt",
        "inserted": "return self.write_excel(df, save_file_name)",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "operator",
        "inserted": "=",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "trailer",
        "inserted": "[:, N-1]",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "trailer",
        "inserted": "[:, N-1]",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "pd",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "trailer",
        "inserted": ".ExcelWriter",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "writer",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "string",
        "inserted": "'openpyxl'",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "name",
        "inserted": "",
        "deleted": "file_path",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "operator",
        "inserted": "",
        "deleted": ",",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "operator",
        "inserted": "",
        "deleted": "=",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "name",
        "inserted": "",
        "deleted": "sheet_name",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "argument",
        "inserted": "",
        "deleted": "sheet_name=sheet_name",
        "type": "Logic"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "df",
        "deleted": "df",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "sheet_name",
        "deleted": "sheet_name",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "trailer",
        "inserted": ".to_excel",
        "deleted": ".to_excel",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "sheet_name",
        "deleted": "sheet_name",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "operator",
        "inserted": ",",
        "deleted": ",",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "argument",
        "inserted": "index=False",
        "deleted": "index=False",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "file_path",
        "deleted": "file_path",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "operator",
        "inserted": ",",
        "deleted": ",",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "sheet_name",
        "deleted": "sheet_name",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "operator",
        "inserted": "=",
        "deleted": "=",
        "type": "Move"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "self",
        "deleted": "file_path",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "N",
        "deleted": "sheet_name",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "save_file_name",
        "deleted": "column_name",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "writer",
        "deleted": "df",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "df",
        "deleted": "sheet_name",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "save_file_name",
        "deleted": "sheet_name",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "iloc",
        "deleted": "column_name",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "iloc",
        "deleted": "column_name",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "save_file_name",
        "deleted": "file_path",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "engine",
        "deleted": "sheet_name",
        "type": "Refactoring"
    }
]