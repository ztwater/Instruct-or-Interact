[
    {
        "action": "INS",
        "label": "param",
        "inserted": "file_name",
        "deleted": "",
        "type": "Method_Signature"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "\"\"\"\n        Write data to the specified Excel file\n        :param data: list, Data to be written\n        :param file_name: str, Excel file name to write to\n        :return: int, 1 represents successful writing, 0 represents failed writing\n        \"\"\"\n",
        "deleted": "",
        "type": "Documentation"
    },
    {
        "action": "INS",
        "label": "operator",
        "inserted": ",",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "except_clause",
        "inserted": "except Exception as e",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "df.to_excel(file_name, index=False)\n",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "return 1\n",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "MOV",
        "label": "atom_expr",
        "inserted": "df.to_excel(file_path, index=False)",
        "deleted": "df.to_excel(file_path, index=False)",
        "type": "Move"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "self",
        "deleted": "file_path",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "file_name",
        "deleted": "file_path",
        "type": "Refactoring"
    }
]