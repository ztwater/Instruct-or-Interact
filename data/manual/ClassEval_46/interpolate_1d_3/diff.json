{
  "matches": [
    {
      "src": "atom_expr [605,652]",
      "dest": "atom_expr [506,553]"
    },
    {
      "src": "expr_stmt [1034,1061]",
      "dest": "expr_stmt [932,959]"
    },
    {
      "src": "operator: * [1137,1138]",
      "dest": "operator: * [1035,1036]"
    },
    {
      "src": "atom_expr [1245,1264]",
      "dest": "atom_expr [1139,1161]"
    },
    {
      "src": "if_stmt [566,653]",
      "dest": "if_stmt [467,554]"
    },
    {
      "src": "name: idx [1053,1056]",
      "dest": "name: idx [951,954]"
    },
    {
      "src": "classdef [0,1290]",
      "dest": "classdef [0,1187]"
    },
    {
      "src": "operator: = [1120,1121]",
      "dest": "operator: = [1018,1019]"
    },
    {
      "src": "name: x_new [50,55]",
      "dest": "name: x_interp [50,58]"
    },
    {
      "src": "atom_expr [912,929]",
      "dest": "atom_expr [814,831]"
    },
    {
      "src": "param [44,46]",
      "dest": "param [44,46]"
    },
    {
      "src": "name: x1 [1160,1162]",
      "dest": "name: x1 [1058,1060]"
    },
    {
      "src": "simple_stmt [1034,1062]",
      "dest": "simple_stmt [932,960]"
    },
    {
      "src": "name: y_new [1245,1250]",
      "dest": "name: y_interp [1139,1147]"
    },
    {
      "src": "atom [1127,1136]",
      "dest": "atom [1025,1034]"
    },
    {
      "src": "name: x_val [923,928]",
      "dest": "name: x_val [825,830]"
    },
    {
      "src": "trailer [572,575]",
      "dest": "trailer [473,476]"
    },
    {
      "src": "name: append [1251,1257]",
      "dest": "name: append [1148,1154]"
    },
    {
      "src": "name: y [583,584]",
      "dest": "name: y [484,485]"
    },
    {
      "src": "operator: != [576,578]",
      "dest": "operator: != [477,479]"
    },
    {
      "src": "raise_stmt [599,652]",
      "dest": "raise_stmt [500,553]"
    },
    {
      "src": "operator: , [1036,1037]",
      "dest": "operator: , [934,935]"
    },
    {
      "src": "arith_expr [1053,1060]",
      "dest": "arith_expr [951,958]"
    },
    {
      "src": "testlist_star_expr [1083,1101]",
      "dest": "testlist_star_expr [981,999]"
    },
    {
      "src": "name: Interpolation [6,19]",
      "dest": "name: Interpolation [6,19]"
    },
    {
      "src": "name: abs [915,918]",
      "dest": "name: abs [817,820]"
    },
    {
      "src": "atom_expr [579,585]",
      "dest": "atom_expr [480,486]"
    },
    {
      "src": "name: idx [1085,1088]",
      "dest": "name: idx [983,986]"
    },
    {
      "src": "simple_stmt [1074,1102]",
      "dest": "simple_stmt [972,1000]"
    },
    {
      "src": "name: y1 [1133,1135]",
      "dest": "name: y1 [1031,1033]"
    },
    {
      "src": "param [47,49]",
      "dest": "param [47,49]"
    },
    {
      "src": "trailer [1044,1049]",
      "dest": "trailer [942,947]"
    },
    {
      "src": "name: y2 [1078,1080]",
      "dest": "name: y2 [976,978]"
    },
    {
      "src": "simple_stmt [599,653]",
      "dest": "simple_stmt [500,554]"
    },
    {
      "src": "name: y1 [1074,1076]",
      "dest": "name: y1 [972,974]"
    },
    {
      "src": "suite [586,653]",
      "dest": "suite [487,554]"
    },
    {
      "src": "operator: - [1158,1159]",
      "dest": "operator: - [1056,1057]"
    },
    {
      "src": "trailer [615,652]",
      "dest": "trailer [516,553]"
    },
    {
      "src": "name: y [47,48]",
      "dest": "name: y [47,48]"
    },
    {
      "src": "atom [1139,1151]",
      "dest": "atom [1037,1049]"
    },
    {
      "src": "name: np [912,914]",
      "dest": "name: np [814,816]"
    },
    {
      "src": "name: y_val [1114,1119]",
      "dest": "name: y_val [1012,1017]"
    },
    {
      "src": "name: x2 [1155,1157]",
      "dest": "name: x2 [1053,1055]"
    },
    {
      "src": "name: y_new [704,709]",
      "dest": "name: y_interp [601,609]"
    },
    {
      "src": "simple_stmt [1245,1265]",
      "dest": "simple_stmt [1139,1162]"
    },
    {
      "src": "name: y [1083,1084]",
      "dest": "name: y [981,982]"
    },
    {
      "src": "name: x [573,574]",
      "dest": "name: x [474,475]"
    },
    {
      "src": "testlist_star_expr [1034,1040]",
      "dest": "testlist_star_expr [932,938]"
    },
    {
      "src": "expr_stmt [704,714]",
      "dest": "expr_stmt [601,614]"
    },
    {
      "src": "atom_expr [1083,1089]",
      "dest": "atom_expr [981,987]"
    },
    {
      "src": "file_input [0,1290]",
      "dest": "file_input [0,1187]"
    },
    {
      "src": "trailer [937,939]",
      "dest": "trailer [839,841]"
    },
    {
      "src": "atom [1154,1163]",
      "dest": "atom [1052,1061]"
    },
    {
      "src": "name: y [1091,1092]",
      "dest": "name: y [989,990]"
    },
    {
      "src": "name: interpolate_1d [29,43]",
      "dest": "name: interpolate_1d [29,43]"
    },
    {
      "src": "name: y_val [1258,1263]",
      "dest": "name: y_val [1155,1160]"
    },
    {
      "src": "name: ValueError [605,615]",
      "dest": "name: ValueError [506,516]"
    },
    {
      "src": "atom [911,930]",
      "dest": "atom [813,832]"
    },
    {
      "src": "name: idx [1093,1096]",
      "dest": "name: idx [991,994]"
    },
    {
      "src": "number: 1 [1099,1100]",
      "dest": "number: 1 [997,998]"
    },
    {
      "src": "number: 1 [1059,1060]",
      "dest": "number: 1 [957,958]"
    },
    {
      "src": "operator: - [921,922]",
      "dest": "operator: - [823,824]"
    },
    {
      "src": "atom_expr [1043,1049]",
      "dest": "atom_expr [941,947]"
    },
    {
      "src": "name: x [919,920]",
      "dest": "name: x [821,822]"
    },
    {
      "src": "arith_expr [1128,1135]",
      "dest": "arith_expr [1026,1033]"
    },
    {
      "src": "expr_stmt [1114,1163]",
      "dest": "expr_stmt [1012,1061]"
    },
    {
      "src": "parameters [43,56]",
      "dest": "parameters [43,59]"
    },
    {
      "src": "trailer [1250,1257]",
      "dest": "trailer [1147,1154]"
    },
    {
      "src": "arith_expr [1155,1162]",
      "dest": "arith_expr [1053,1060]"
    },
    {
      "src": "string: \"x and y must have the same length\" [616,651]",
      "dest": "string: \"x and y must have the same length\" [517,552]"
    },
    {
      "src": "name: y1 [1122,1124]",
      "dest": "name: y1 [1020,1022]"
    },
    {
      "src": "for_stmt [788,1265]",
      "dest": "for_stmt [687,1162]"
    },
    {
      "src": "name: x [1051,1052]",
      "dest": "name: x [949,950]"
    },
    {
      "src": "testlist_star_expr [1074,1080]",
      "dest": "testlist_star_expr [972,978]"
    },
    {
      "src": "trailer [1092,1101]",
      "dest": "trailer [990,999]"
    },
    {
      "src": "name: x1 [1034,1036]",
      "dest": "name: x1 [932,934]"
    },
    {
      "src": "name: y_new [1285,1290]",
      "dest": "name: y_interp [1178,1186]"
    },
    {
      "src": "comparison [569,585]",
      "dest": "comparison [470,486]"
    },
    {
      "src": "trailer [582,585]",
      "dest": "trailer [483,486]"
    },
    {
      "src": "suite [20,1290]",
      "dest": "suite [20,1187]"
    },
    {
      "src": "operator: = [909,910]",
      "dest": "operator: = [811,812]"
    },
    {
      "src": "suite [57,1290]",
      "dest": "suite [60,1187]"
    },
    {
      "src": "operator: = [710,711]",
      "dest": "operator: = [610,611]"
    },
    {
      "src": "operator: , [1076,1077]",
      "dest": "operator: , [974,975]"
    },
    {
      "src": "operator: - [1131,1132]",
      "dest": "operator: - [1029,1030]"
    },
    {
      "src": "expr_stmt [1074,1101]",
      "dest": "expr_stmt [972,999]"
    },
    {
      "src": "trailer [918,929]",
      "dest": "trailer [820,831]"
    },
    {
      "src": "name: x_val [1140,1145]",
      "dest": "name: x_val [1038,1043]"
    },
    {
      "src": "arith_expr [1093,1100]",
      "dest": "arith_expr [991,998]"
    },
    {
      "src": "name: x_val [792,797]",
      "dest": "name: x_val [691,696]"
    },
    {
      "src": "operator: - [1146,1147]",
      "dest": "operator: - [1044,1045]"
    },
    {
      "src": "operator: , [1089,1090]",
      "dest": "operator: , [987,988]"
    },
    {
      "src": "name: argmin [931,937]",
      "dest": "name: argmin [833,839]"
    },
    {
      "src": "operator: , [48,49]",
      "dest": "operator: , [48,49]"
    },
    {
      "src": "simple_stmt [1114,1164]",
      "dest": "simple_stmt [1012,1062]"
    },
    {
      "src": "testlist_star_expr [1043,1061]",
      "dest": "testlist_star_expr [941,959]"
    },
    {
      "src": "simple_stmt [905,940]",
      "dest": "simple_stmt [807,842]"
    },
    {
      "src": "atom [712,714]",
      "dest": "atom [612,614]"
    },
    {
      "src": "expr_stmt [905,939]",
      "dest": "expr_stmt [807,841]"
    },
    {
      "src": "funcdef [25,1290]",
      "dest": "funcdef [25,1187]"
    },
    {
      "src": "return_stmt [1278,1290]",
      "dest": "return_stmt [1171,1186]"
    },
    {
      "src": "simple_stmt [66,496]",
      "dest": "simple_stmt [69,402]"
    },
    {
      "src": "arith_expr [1122,1163]",
      "dest": "arith_expr [1020,1061]"
    },
    {
      "src": "trailer [1084,1089]",
      "dest": "trailer [982,987]"
    },
    {
      "src": "atom_expr [1051,1061]",
      "dest": "atom_expr [949,959]"
    },
    {
      "src": "trailer [930,937]",
      "dest": "trailer [832,839]"
    },
    {
      "src": "atom_expr [911,939]",
      "dest": "atom_expr [813,841]"
    },
    {
      "src": "atom_expr [569,575]",
      "dest": "atom_expr [470,476]"
    },
    {
      "src": "operator: + [1057,1058]",
      "dest": "operator: + [955,956]"
    },
    {
      "src": "name: x_new [801,806]",
      "dest": "name: x_interp [700,708]"
    },
    {
      "src": "name: y2 [1128,1130]",
      "dest": "name: y2 [1026,1028]"
    },
    {
      "src": "name: len [579,582]",
      "dest": "name: len [480,483]"
    },
    {
      "src": "simple_stmt [704,715]",
      "dest": "simple_stmt [601,615]"
    },
    {
      "src": "name: idx [905,908]",
      "dest": "name: idx [807,810]"
    },
    {
      "src": "operator: + [1097,1098]",
      "dest": "operator: + [995,996]"
    },
    {
      "src": "atom_expr [1091,1101]",
      "dest": "atom_expr [989,999]"
    },
    {
      "src": "operator: , [45,46]",
      "dest": "operator: , [45,46]"
    },
    {
      "src": "name: x2 [1038,1040]",
      "dest": "name: x2 [936,938]"
    },
    {
      "src": "suite [807,1265]",
      "dest": "suite [709,1162]"
    },
    {
      "src": "arith_expr [919,928]",
      "dest": "arith_expr [821,830]"
    },
    {
      "src": "operator: = [1041,1042]",
      "dest": "operator: = [939,940]"
    },
    {
      "src": "name: idx [1045,1048]",
      "dest": "name: idx [943,946]"
    },
    {
      "src": "name: len [569,572]",
      "dest": "name: len [470,473]"
    },
    {
      "src": "name: x [44,45]",
      "dest": "name: x [44,45]"
    },
    {
      "src": "trailer [1052,1061]",
      "dest": "trailer [950,959]"
    },
    {
      "src": "name: x1 [1148,1150]",
      "dest": "name: x1 [1046,1048]"
    },
    {
      "src": "string: \"\"\"         Linear interpolation of one-dimensional data.              Parameters:         - x: list or numpy array of x-coordinates of the data points         - y: list or numpy array of y-coordinates of the data points         - x_new: list or numpy array of x-coordinates where interpolation is desired              Returns:         - y_new: list or numpy array of interpolated y-coordinates corresponding to x_new         \"\"\" [66,495]",
      "dest": "string: \"\"\"         Linear interpolation of one-dimensional data         :param x: The x-coordinate of the data point, list.         :param y: The y-coordinate of the data point, list.         :param x_interp: The x-coordinate of the interpolation point, list.         :return: The y-coordinate of the interpolation point, list.         \"\"\" [69,401]"
    },
    {
      "src": "trailer [914,918]",
      "dest": "trailer [816,820]"
    },
    {
      "src": "arith_expr [1140,1150]",
      "dest": "arith_expr [1038,1048]"
    },
    {
      "src": "trailer [1257,1264]",
      "dest": "trailer [1154,1161]"
    },
    {
      "src": "name: x [1043,1044]",
      "dest": "name: x [941,942]"
    },
    {
      "src": "param [50,55]",
      "dest": "param [50,58]"
    },
    {
      "src": "operator: + [1125,1126]",
      "dest": "operator: + [1023,1024]"
    },
    {
      "src": "term [1127,1163]",
      "dest": "term [1025,1061]"
    },
    {
      "src": "operator: / [1152,1153]",
      "dest": "operator: / [1050,1051]"
    },
    {
      "src": "operator: = [1081,1082]",
      "dest": "operator: = [979,980]"
    },
    {
      "src": "operator: , [1049,1050]",
      "dest": "operator: , [947,948]"
    }
  ],
  "actions": [
    {
      "action": "insert-node",
      "tree": "simple_stmt [1171,1187]",
      "parent": "suite [60,1187]",
      "at": 4
    },
    {
      "action": "update-node",
      "tree": "name: x_new [50,55]",
      "label": "x_interp"
    },
    {
      "action": "update-node",
      "tree": "string: \"\"\"         Linear interpolation of one-dimensional data.              Parameters:         - x: list or numpy array of x-coordinates of the data points         - y: list or numpy array of y-coordinates of the data points         - x_new: list or numpy array of x-coordinates where interpolation is desired              Returns:         - y_new: list or numpy array of interpolated y-coordinates corresponding to x_new         \"\"\" [66,495]",
      "label": "\"\"\"         Linear interpolation of one-dimensional data         :param x: The x-coordinate of the data point, list.         :param y: The y-coordinate of the data point, list.         :param x_interp: The x-coordinate of the interpolation point, list.         :return: The y-coordinate of the interpolation point, list.         \"\"\""
    },
    {
      "action": "update-node",
      "tree": "name: x_new [801,806]",
      "label": "x_interp"
    },
    {
      "action": "move-tree",
      "tree": "return_stmt [1278,1290]",
      "parent": "simple_stmt [1171,1187]",
      "at": 0
    },
    {
      "action": "update-node",
      "tree": "name: y_new [704,709]",
      "label": "y_interp"
    },
    {
      "action": "update-node",
      "tree": "name: y_new [1285,1290]",
      "label": "y_interp"
    },
    {
      "action": "update-node",
      "tree": "name: y_new [1245,1250]",
      "label": "y_interp"
    }
  ]
}