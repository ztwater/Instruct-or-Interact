{
  "matches": [
    {
      "src": "atom_expr [605,652]",
      "dest": "atom_expr [511,558]"
    },
    {
      "src": "expr_stmt [1034,1061]",
      "dest": "expr_stmt [948,975]"
    },
    {
      "src": "operator: * [1137,1138]",
      "dest": "operator: * [1051,1052]"
    },
    {
      "src": "atom_expr [1245,1264]",
      "dest": "atom_expr [1158,1180]"
    },
    {
      "src": "if_stmt [566,653]",
      "dest": "if_stmt [472,559]"
    },
    {
      "src": "name: idx [1053,1056]",
      "dest": "name: idx [967,970]"
    },
    {
      "src": "classdef [0,1290]",
      "dest": "classdef [0,1209]"
    },
    {
      "src": "operator: = [1120,1121]",
      "dest": "operator: = [1034,1035]"
    },
    {
      "src": "name: x_new [50,55]",
      "dest": "name: x_interp [56,64]"
    },
    {
      "src": "atom_expr [912,929]",
      "dest": "atom_expr [826,843]"
    },
    {
      "src": "param [47,49]",
      "dest": "param [53,55]"
    },
    {
      "src": "name: x1 [1160,1162]",
      "dest": "name: x1 [1074,1076]"
    },
    {
      "src": "simple_stmt [1034,1062]",
      "dest": "simple_stmt [948,976]"
    },
    {
      "src": "name: x_val [792,797]",
      "dest": "name: x_val [703,708]"
    },
    {
      "src": "atom [1127,1136]",
      "dest": "atom [1041,1050]"
    },
    {
      "src": "name: x_val [923,928]",
      "dest": "name: x_val [837,842]"
    },
    {
      "src": "name: x_new [801,806]",
      "dest": "name: x_interp [712,720]"
    },
    {
      "src": "trailer [572,575]",
      "dest": "trailer [478,481]"
    },
    {
      "src": "name: append [1251,1257]",
      "dest": "name: append [1167,1173]"
    },
    {
      "src": "name: y [583,584]",
      "dest": "name: y [489,490]"
    },
    {
      "src": "operator: != [576,578]",
      "dest": "operator: != [482,484]"
    },
    {
      "src": "raise_stmt [599,652]",
      "dest": "raise_stmt [505,558]"
    },
    {
      "src": "operator: , [1036,1037]",
      "dest": "operator: , [950,951]"
    },
    {
      "src": "arith_expr [1053,1060]",
      "dest": "arith_expr [967,974]"
    },
    {
      "src": "testlist_star_expr [1083,1101]",
      "dest": "testlist_star_expr [997,1015]"
    },
    {
      "src": "name: Interpolation [6,19]",
      "dest": "name: Interpolation [6,19]"
    },
    {
      "src": "name: abs [915,918]",
      "dest": "name: abs [829,832]"
    },
    {
      "src": "atom_expr [579,585]",
      "dest": "atom_expr [485,491]"
    },
    {
      "src": "name: idx [1085,1088]",
      "dest": "name: idx [999,1002]"
    },
    {
      "src": "simple_stmt [1074,1102]",
      "dest": "simple_stmt [988,1016]"
    },
    {
      "src": "name: y1 [1133,1135]",
      "dest": "name: y1 [1047,1049]"
    },
    {
      "src": "param [50,55]",
      "dest": "param [56,64]"
    },
    {
      "src": "trailer [1044,1049]",
      "dest": "trailer [958,963]"
    },
    {
      "src": "name: y2 [1078,1080]",
      "dest": "name: y2 [992,994]"
    },
    {
      "src": "simple_stmt [599,653]",
      "dest": "simple_stmt [505,559]"
    },
    {
      "src": "name: y1 [1074,1076]",
      "dest": "name: y1 [988,990]"
    },
    {
      "src": "suite [586,653]",
      "dest": "suite [492,559]"
    },
    {
      "src": "operator: - [1158,1159]",
      "dest": "operator: - [1072,1073]"
    },
    {
      "src": "trailer [615,652]",
      "dest": "trailer [521,558]"
    },
    {
      "src": "name: y [47,48]",
      "dest": "name: y [53,54]"
    },
    {
      "src": "atom [1139,1151]",
      "dest": "atom [1053,1065]"
    },
    {
      "src": "name: np [912,914]",
      "dest": "name: np [826,828]"
    },
    {
      "src": "name: y_val [1114,1119]",
      "dest": "name: y_val [1028,1033]"
    },
    {
      "src": "name: x2 [1155,1157]",
      "dest": "name: x2 [1069,1071]"
    },
    {
      "src": "simple_stmt [1245,1265]",
      "dest": "simple_stmt [1158,1181]"
    },
    {
      "src": "name: y [1083,1084]",
      "dest": "name: y [997,998]"
    },
    {
      "src": "name: x [573,574]",
      "dest": "name: x [479,480]"
    },
    {
      "src": "testlist_star_expr [1034,1040]",
      "dest": "testlist_star_expr [948,954]"
    },
    {
      "src": "simple_stmt [66,496]",
      "dest": "simple_stmt [75,408]"
    },
    {
      "src": "atom_expr [1083,1089]",
      "dest": "atom_expr [997,1003]"
    },
    {
      "src": "file_input [0,1290]",
      "dest": "file_input [0,1209]"
    },
    {
      "src": "trailer [937,939]",
      "dest": "trailer [851,853]"
    },
    {
      "src": "atom [1154,1163]",
      "dest": "atom [1068,1077]"
    },
    {
      "src": "name: y [1091,1092]",
      "dest": "name: y [1005,1006]"
    },
    {
      "src": "name: interpolate_1d [29,43]",
      "dest": "name: interpolate_1d [29,43]"
    },
    {
      "src": "name: y_val [1258,1263]",
      "dest": "name: y_val [1174,1179]"
    },
    {
      "src": "name: ValueError [605,615]",
      "dest": "name: ValueError [511,521]"
    },
    {
      "src": "atom [911,930]",
      "dest": "atom [825,844]"
    },
    {
      "src": "name: idx [1093,1096]",
      "dest": "name: idx [1007,1010]"
    },
    {
      "src": "number: 1 [1099,1100]",
      "dest": "number: 1 [1013,1014]"
    },
    {
      "src": "number: 1 [1059,1060]",
      "dest": "number: 1 [973,974]"
    },
    {
      "src": "operator: - [921,922]",
      "dest": "operator: - [835,836]"
    },
    {
      "src": "atom_expr [1043,1049]",
      "dest": "atom_expr [957,963]"
    },
    {
      "src": "name: x [919,920]",
      "dest": "name: x [833,834]"
    },
    {
      "src": "arith_expr [1128,1135]",
      "dest": "arith_expr [1042,1049]"
    },
    {
      "src": "expr_stmt [1114,1163]",
      "dest": "expr_stmt [1028,1077]"
    },
    {
      "src": "parameters [43,56]",
      "dest": "parameters [43,65]"
    },
    {
      "src": "trailer [1257,1264]",
      "dest": "trailer [1173,1180]"
    },
    {
      "src": "arith_expr [1155,1162]",
      "dest": "arith_expr [1069,1076]"
    },
    {
      "src": "string: \"x and y must have the same length\" [616,651]",
      "dest": "string: \"x and y must have the same length\" [522,557]"
    },
    {
      "src": "name: y1 [1122,1124]",
      "dest": "name: y1 [1036,1038]"
    },
    {
      "src": "name: y_new [1285,1290]",
      "dest": "name: y_interp [1201,1209]"
    },
    {
      "src": "for_stmt [788,1265]",
      "dest": "for_stmt [699,1181]"
    },
    {
      "src": "name: x [1051,1052]",
      "dest": "name: x [965,966]"
    },
    {
      "src": "testlist_star_expr [1074,1080]",
      "dest": "testlist_star_expr [988,994]"
    },
    {
      "src": "trailer [1092,1101]",
      "dest": "trailer [1006,1015]"
    },
    {
      "src": "name: x1 [1034,1036]",
      "dest": "name: x1 [948,950]"
    },
    {
      "src": "comparison [569,585]",
      "dest": "comparison [475,491]"
    },
    {
      "src": "trailer [582,585]",
      "dest": "trailer [488,491]"
    },
    {
      "src": "suite [20,1290]",
      "dest": "suite [20,1209]"
    },
    {
      "src": "operator: = [909,910]",
      "dest": "operator: = [823,824]"
    },
    {
      "src": "suite [57,1290]",
      "dest": "suite [66,1209]"
    },
    {
      "src": "string: \"\"\"         Linear interpolation of one-dimensional data.              Parameters:         - x: list or numpy array of x-coordinates of the data points         - y: list or numpy array of y-coordinates of the data points         - x_new: list or numpy array of x-coordinates where interpolation is desired              Returns:         - y_new: list or numpy array of interpolated y-coordinates corresponding to x_new         \"\"\" [66,495]",
      "dest": "string: \"\"\"         Linear interpolation of one-dimensional data         :param x: The x-coordinate of the data point, list.         :param y: The y-coordinate of the data point, list.         :param x_interp: The x-coordinate of the interpolation point, list.         :return: The y-coordinate of the interpolation point, list.         \"\"\" [75,407]"
    },
    {
      "src": "operator: , [1076,1077]",
      "dest": "operator: , [990,991]"
    },
    {
      "src": "operator: - [1131,1132]",
      "dest": "operator: - [1045,1046]"
    },
    {
      "src": "expr_stmt [1074,1101]",
      "dest": "expr_stmt [988,1015]"
    },
    {
      "src": "trailer [918,929]",
      "dest": "trailer [832,843]"
    },
    {
      "src": "name: x_val [1140,1145]",
      "dest": "name: x_val [1054,1059]"
    },
    {
      "src": "arith_expr [1093,1100]",
      "dest": "arith_expr [1007,1014]"
    },
    {
      "src": "operator: = [710,711]",
      "dest": "operator: = [618,619]"
    },
    {
      "src": "operator: - [1146,1147]",
      "dest": "operator: - [1060,1061]"
    },
    {
      "src": "operator: , [1089,1090]",
      "dest": "operator: , [1003,1004]"
    },
    {
      "src": "name: argmin [931,937]",
      "dest": "name: argmin [845,851]"
    },
    {
      "src": "operator: , [48,49]",
      "dest": "operator: , [54,55]"
    },
    {
      "src": "simple_stmt [1114,1164]",
      "dest": "simple_stmt [1028,1078]"
    },
    {
      "src": "testlist_star_expr [1043,1061]",
      "dest": "testlist_star_expr [957,975]"
    },
    {
      "src": "simple_stmt [905,940]",
      "dest": "simple_stmt [819,854]"
    },
    {
      "src": "name: y_new [704,709]",
      "dest": "name: y_interp [609,617]"
    },
    {
      "src": "expr_stmt [905,939]",
      "dest": "expr_stmt [819,853]"
    },
    {
      "src": "funcdef [25,1290]",
      "dest": "funcdef [25,1209]"
    },
    {
      "src": "param [44,46]",
      "dest": "param [50,52]"
    },
    {
      "src": "return_stmt [1278,1290]",
      "dest": "return_stmt [1194,1209]"
    },
    {
      "src": "arith_expr [1122,1163]",
      "dest": "arith_expr [1036,1077]"
    },
    {
      "src": "trailer [1084,1089]",
      "dest": "trailer [998,1003]"
    },
    {
      "src": "atom_expr [1051,1061]",
      "dest": "atom_expr [965,975]"
    },
    {
      "src": "trailer [930,937]",
      "dest": "trailer [844,851]"
    },
    {
      "src": "atom_expr [911,939]",
      "dest": "atom_expr [825,853]"
    },
    {
      "src": "atom_expr [569,575]",
      "dest": "atom_expr [475,481]"
    },
    {
      "src": "operator: + [1057,1058]",
      "dest": "operator: + [971,972]"
    },
    {
      "src": "atom [712,714]",
      "dest": "atom [620,622]"
    },
    {
      "src": "name: y2 [1128,1130]",
      "dest": "name: y2 [1042,1044]"
    },
    {
      "src": "name: len [579,582]",
      "dest": "name: len [485,488]"
    },
    {
      "src": "simple_stmt [704,715]",
      "dest": "simple_stmt [609,623]"
    },
    {
      "src": "name: idx [905,908]",
      "dest": "name: idx [819,822]"
    },
    {
      "src": "operator: + [1097,1098]",
      "dest": "operator: + [1011,1012]"
    },
    {
      "src": "atom_expr [1091,1101]",
      "dest": "atom_expr [1005,1015]"
    },
    {
      "src": "operator: , [45,46]",
      "dest": "operator: , [51,52]"
    },
    {
      "src": "name: x2 [1038,1040]",
      "dest": "name: x2 [952,954]"
    },
    {
      "src": "name: y_new [1245,1250]",
      "dest": "name: y_interp [1158,1166]"
    },
    {
      "src": "suite [807,1265]",
      "dest": "suite [721,1181]"
    },
    {
      "src": "arith_expr [919,928]",
      "dest": "arith_expr [833,842]"
    },
    {
      "src": "operator: = [1041,1042]",
      "dest": "operator: = [955,956]"
    },
    {
      "src": "name: idx [1045,1048]",
      "dest": "name: idx [959,962]"
    },
    {
      "src": "name: len [569,572]",
      "dest": "name: len [475,478]"
    },
    {
      "src": "name: x [44,45]",
      "dest": "name: x [50,51]"
    },
    {
      "src": "trailer [1052,1061]",
      "dest": "trailer [966,975]"
    },
    {
      "src": "name: x1 [1148,1150]",
      "dest": "name: x1 [1062,1064]"
    },
    {
      "src": "trailer [914,918]",
      "dest": "trailer [828,832]"
    },
    {
      "src": "arith_expr [1140,1150]",
      "dest": "arith_expr [1054,1064]"
    },
    {
      "src": "expr_stmt [704,714]",
      "dest": "expr_stmt [609,622]"
    },
    {
      "src": "name: x [1043,1044]",
      "dest": "name: x [957,958]"
    },
    {
      "src": "trailer [1250,1257]",
      "dest": "trailer [1166,1173]"
    },
    {
      "src": "operator: + [1125,1126]",
      "dest": "operator: + [1039,1040]"
    },
    {
      "src": "term [1127,1163]",
      "dest": "term [1041,1077]"
    },
    {
      "src": "operator: / [1152,1153]",
      "dest": "operator: / [1066,1067]"
    },
    {
      "src": "operator: = [1081,1082]",
      "dest": "operator: = [995,996]"
    },
    {
      "src": "operator: , [1049,1050]",
      "dest": "operator: , [963,964]"
    }
  ],
  "actions": [
    {
      "action": "insert-tree",
      "tree": "param [44,49]",
      "parent": "parameters [43,65]",
      "at": 0
    },
    {
      "action": "update-node",
      "tree": "name: x_new [50,55]",
      "label": "x_interp"
    },
    {
      "action": "update-node",
      "tree": "string: \"\"\"         Linear interpolation of one-dimensional data.              Parameters:         - x: list or numpy array of x-coordinates of the data points         - y: list or numpy array of y-coordinates of the data points         - x_new: list or numpy array of x-coordinates where interpolation is desired              Returns:         - y_new: list or numpy array of interpolated y-coordinates corresponding to x_new         \"\"\" [66,495]",
      "label": "\"\"\"         Linear interpolation of one-dimensional data         :param x: The x-coordinate of the data point, list.         :param y: The y-coordinate of the data point, list.         :param x_interp: The x-coordinate of the interpolation point, list.         :return: The y-coordinate of the interpolation point, list.         \"\"\""
    },
    {
      "action": "update-node",
      "tree": "name: x_new [801,806]",
      "label": "x_interp"
    },
    {
      "action": "update-node",
      "tree": "name: y_new [1285,1290]",
      "label": "y_interp"
    },
    {
      "action": "update-node",
      "tree": "name: y_new [704,709]",
      "label": "y_interp"
    },
    {
      "action": "update-node",
      "tree": "name: y_new [1245,1250]",
      "label": "y_interp"
    }
  ]
}