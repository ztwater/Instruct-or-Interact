[
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "\"\"\"\n        Gain experience points for the character and level_up when the exp has reached the values that is 100 times the current level\n        The experience that overflows should be used to calculate the next leve up untill exhausts\n        :param amount: int, the amount of experience points to gain.\n        >>> player_1 = RPGCharacter('player 1', 100, 10, 3)\n        >>> player_1.gain_exp(1100)\n        >>> player_1.exp\n        100\n        >>> player_1.level\n        5\n        \"\"\"\n",
        "deleted": "",
        "type": "Documentation"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "self.exp += amount\n",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "exp_needed = self.level * 100\n",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "self",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "trailer",
        "inserted": ".exp",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "self",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "trailer",
        "inserted": ".level",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "operator",
        "inserted": "-=",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "exp_needed",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "self",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "trailer",
        "inserted": ".level",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "exp",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "string:",
        "inserted": "",
        "deleted": "\"Level up!\"",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "simple_stmt",
        "inserted": "",
        "deleted": "print(\"No level up yet.\")\n",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "return_stmt",
        "inserted": "",
        "deleted": "return level",
        "type": "Logic"
    },
    {
        "action": "MOV",
        "label": "atom_expr",
        "inserted": "print(\"No level up yet.\")",
        "deleted": "print(\"No level up yet.\")",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "exp",
        "deleted": "exp",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "atom_expr",
        "inserted": "print(\"Level up!\")",
        "deleted": "print(\"Level up!\")",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "level",
        "deleted": "level",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "level",
        "deleted": "level",
        "type": "Move"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "self",
        "deleted": "exp",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "amount",
        "deleted": "level",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "self",
        "deleted": "print",
        "type": "Refactoring"
    }
]