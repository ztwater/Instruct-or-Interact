file_input [0,302]
    classdef [0,301]
        name: TriCalculator [6,19]
        suite [20,301]
            funcdef [25,301]
                name: factorial [29,38]
                parameters [38,47]
                    param [39,44]
                        name: self [39,43]
                        operator: , [43,44]
                    param [45,46]
                        name: a [45,46]
                suite [48,301]
                    simple_stmt [57,204]
                        string: """         Calculate the factorial of a         :param a: int         :return: int         >>> tricalculator.factorial(5)         120         """ [57,203]
                    simple_stmt [212,223]
                        expr_stmt [212,222]
                            name: result [212,218]
                            operator: = [219,220]
                            number: 1 [221,222]
                    for_stmt [231,279]
                        name: i [235,236]
                        atom_expr [240,253]
                            name: range [240,245]
                            trailer [245,253]
                                arglist [246,252]
                                    number: 1 [246,247]
                                    operator: , [247,248]
                                    arith_expr [249,252]
                                        name: a [249,250]
                                        operator: + [250,251]
                                        number: 1 [251,252]
                        suite [254,279]
                            simple_stmt [267,279]
                                expr_stmt [267,278]
                                    name: result [267,273]
                                    operator: *= [274,276]
                                    name: i [277,278]
                    simple_stmt [287,301]
                        return_stmt [287,300]
                            name: result [294,300]