{
  "matches": [
    {
      "src": "simple_stmt [595,631]",
      "dest": "simple_stmt [863,899]"
    },
    {
      "src": "name: req [528,531]",
      "dest": "name: req [793,796]"
    },
    {
      "src": "name: position [535,543]",
      "dest": "name: position [800,808]"
    },
    {
      "src": "suite [578,631]",
      "dest": "suite [846,899]"
    },
    {
      "src": "atom [462,464]",
      "dest": "atom [719,721]"
    },
    {
      "src": "suite [21,673]",
      "dest": "suite [21,941]"
    },
    {
      "src": "atom_expr [535,552]",
      "dest": "atom_expr [800,824]"
    },
    {
      "src": "trailer [620,630]",
      "dest": "trailer [888,898]"
    },
    {
      "src": "return_stmt [648,673]",
      "dest": "return_stmt [916,941]"
    },
    {
      "src": "simple_stmt [441,465]",
      "dest": "simple_stmt [698,722]"
    },
    {
      "src": "classdef [0,673]",
      "dest": "classdef [0,941]"
    },
    {
      "src": "name: matching_positions [441,459]",
      "dest": "name: matching_positions [698,716]"
    },
    {
      "src": "parameters [41,55]",
      "dest": "parameters [41,57]"
    },
    {
      "src": "suite [56,673]",
      "dest": "suite [58,941]"
    },
    {
      "src": "name: matching_positions [655,673]",
      "dest": "name: matching_positions [923,941]"
    },
    {
      "src": "trailer [613,620]",
      "dest": "trailer [881,888]"
    },
    {
      "src": "comparison [528,552]",
      "dest": "comparison [793,824]"
    },
    {
      "src": "trailer [527,577]",
      "dest": "trailer [792,845]"
    },
    {
      "src": "file_input [0,673]",
      "dest": "file_input [0,941]"
    },
    {
      "src": "name: requirements [42,54]",
      "dest": "name: self [42,46]"
    },
    {
      "src": "name: positions [498,507]",
      "dest": "name: job_listings [760,772]"
    },
    {
      "src": "name: append [614,620]",
      "dest": "name: append [882,888]"
    },
    {
      "src": "operator: = [460,461]",
      "dest": "operator: = [717,718]"
    },
    {
      "src": "suite [508,631]",
      "dest": "suite [773,899]"
    },
    {
      "src": "expr_stmt [441,464]",
      "dest": "expr_stmt [698,721]"
    },
    {
      "src": "name: search_jobs [30,41]",
      "dest": "name: search_jobs [30,41]"
    },
    {
      "src": "name: all [524,527]",
      "dest": "name: all [789,792]"
    },
    {
      "src": "name: JobMarketplace [6,20]",
      "dest": "name: JobMarketplace [6,20]"
    },
    {
      "src": "name: matching_positions [595,613]",
      "dest": "name: matching_positions [863,881]"
    },
    {
      "src": "string: \"Software Engineer\" [101,120]",
      "dest": "string: \"\"\"         This function is used to search for positions,and return the position information that meets the requirements.         :param criteria: The requirements of the position,list.         :return: The position information that meets the requirements,list.         >>> jobMarketplace = JobMarketplace()         >>> jobMarketplace.job_listings = [{\"job_title\": \"Software Engineer\", \"company\": \"ABC Company\", \"requirements\": ['skill1', 'skill2']}]         >>> jobMarketplace.search_jobs(\"skill1\")         [{'job_title': 'Software Engineer', 'company': 'ABC Company', 'requirements': ['skill1', 'skill2']}]          \"\"\" [67,689]"
    },
    {
      "src": "atom_expr [595,630]",
      "dest": "atom_expr [863,898]"
    },
    {
      "src": "name: position [621,629]",
      "dest": "name: position [889,897]"
    },
    {
      "src": "if_stmt [521,631]",
      "dest": "if_stmt [786,899]"
    },
    {
      "src": "name: req [557,560]",
      "dest": "name: req [829,832]"
    },
    {
      "src": "simple_stmt [65,424]",
      "dest": "simple_stmt [67,690]"
    },
    {
      "src": "trailer [543,550]",
      "dest": "trailer [808,824]"
    },
    {
      "src": "for_stmt [482,631]",
      "dest": "for_stmt [739,899]"
    },
    {
      "src": "name: position [486,494]",
      "dest": "name: position [743,751]"
    },
    {
      "src": "funcdef [26,673]",
      "dest": "funcdef [26,941]"
    },
    {
      "src": "atom_expr [524,577]",
      "dest": "atom_expr [789,845]"
    },
    {
      "src": "param [42,54]",
      "dest": "param [42,47]"
    },
    {
      "src": "argument [528,576]",
      "dest": "argument [793,844]"
    },
    {
      "src": "sync_comp_for [553,576]",
      "dest": "sync_comp_for [825,844]"
    },
    {
      "src": "name: requirements [564,576]",
      "dest": "name: criteria [836,844]"
    }
  ],
  "actions": [
    {
      "action": "insert-tree",
      "tree": "param [48,56]",
      "parent": "parameters [41,57]",
      "at": 1
    },
    {
      "action": "update-node",
      "tree": "name: requirements [42,54]",
      "label": "self"
    },
    {
      "action": "insert-node",
      "tree": "operator: , [46,47]",
      "parent": "param [42,47]",
      "at": 1
    },
    {
      "action": "update-node",
      "tree": "string: \"Software Engineer\" [101,120]",
      "label": "\"\"\"         This function is used to search for positions,and return the position information that meets the requirements.         :param criteria: The requirements of the position,list.         :return: The position information that meets the requirements,list.         >>> jobMarketplace = JobMarketplace()         >>> jobMarketplace.job_listings = [{\"job_title\": \"Software Engineer\", \"company\": \"ABC Company\", \"requirements\": ['skill1', 'skill2']}]         >>> jobMarketplace.search_jobs(\"skill1\")         [{'job_title': 'Software Engineer', 'company': 'ABC Company', 'requirements': ['skill1', 'skill2']}]          \"\"\""
    },
    {
      "action": "move-tree",
      "tree": "string: \"Software Engineer\" [101,120]",
      "parent": "simple_stmt [67,690]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "atom_expr [755,772]",
      "parent": "for_stmt [739,899]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "name: self [755,759]",
      "parent": "atom_expr [755,772]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "trailer [759,772]",
      "parent": "atom_expr [755,772]",
      "at": 1
    },
    {
      "action": "update-node",
      "tree": "name: positions [498,507]",
      "label": "job_listings"
    },
    {
      "action": "move-tree",
      "tree": "name: positions [498,507]",
      "parent": "trailer [759,772]",
      "at": 0
    },
    {
      "action": "update-node",
      "tree": "name: requirements [564,576]",
      "label": "criteria"
    },
    {
      "action": "insert-node",
      "tree": "string: 'requirements' [809,823]",
      "parent": "trailer [808,824]",
      "at": 0
    },
    {
      "action": "delete-node",
      "tree": "name: positions [65,74]"
    },
    {
      "action": "delete-node",
      "tree": "operator: = [75,76]"
    },
    {
      "action": "delete-node",
      "tree": "operator: { [91,92]"
    },
    {
      "action": "delete-node",
      "tree": "string: \"title\" [92,99]"
    },
    {
      "action": "delete-node",
      "tree": "operator: , [120,121]"
    },
    {
      "action": "delete-node",
      "tree": "string: \"location\" [122,132]"
    },
    {
      "action": "delete-node",
      "tree": "string: \"New York\" [134,144]"
    },
    {
      "action": "delete-node",
      "tree": "operator: , [144,145]"
    },
    {
      "action": "delete-node",
      "tree": "string: \"salary\" [146,154]"
    },
    {
      "action": "delete-node",
      "tree": "number: 100000 [156,162]"
    },
    {
      "action": "delete-node",
      "tree": "dictorsetmaker [92,162]"
    },
    {
      "action": "delete-node",
      "tree": "operator: } [162,163]"
    },
    {
      "action": "delete-node",
      "tree": "atom [91,163]"
    },
    {
      "action": "delete-node",
      "tree": "operator: , [163,164]"
    },
    {
      "action": "delete-tree",
      "tree": "atom [177,248]"
    },
    {
      "action": "delete-node",
      "tree": "operator: , [248,249]"
    },
    {
      "action": "delete-tree",
      "tree": "atom [262,331]"
    },
    {
      "action": "delete-node",
      "tree": "operator: , [331,332]"
    },
    {
      "action": "delete-tree",
      "tree": "atom [345,413]"
    },
    {
      "action": "delete-node",
      "tree": "testlist_comp [91,413]"
    },
    {
      "action": "delete-node",
      "tree": "atom [77,423]"
    },
    {
      "action": "delete-node",
      "tree": "expr_stmt [65,423]"
    },
    {
      "action": "delete-node",
      "tree": "name: values [544,550]"
    },
    {
      "action": "delete-node",
      "tree": "trailer [550,552]"
    }
  ]
}