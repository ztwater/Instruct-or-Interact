[
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "\"\"\"\n        Displays the products in the vending machine.\n        :return: If the vending machine is empty, returns False, otherwise, returns a list of the products in the vending machine, list.\n        >>> vendingMachine = VendingMachine()\n        >>> vendingMachine.display_items()\n        False\n        >>> vendingMachine.inventory = {'Coke': {'price': 1.25, 'quantity': 10} }\n        >>> vendingMachine.display_items()\n        'Coke - $1.25 [10]'\n\n        \"\"\"\n",
        "deleted": "",
        "type": "Documentation"
    },
    {
        "action": "INS",
        "label": "comparison",
        "inserted": "len(self.inventory) == 0",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "trailer",
        "inserted": ".inventory",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "price = self.inventory[item]['price']\n",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "quantity = self.inventory[item]['quantity']\n",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "fstring_start",
        "inserted": "f\"",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "fstring_expr",
        "inserted": "{item}",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "fstring_string:",
        "inserted": " - $",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "fstring_string",
        "inserted": " [",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "fstring_expr",
        "inserted": "{quantity}",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "fstring_string",
        "inserted": "]",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "fstring_end",
        "inserted": "\"",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "operator",
        "inserted": "{",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "operator",
        "inserted": "}",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "products",
        "deleted": "products",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "product",
        "deleted": "product",
        "type": "Move"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "self",
        "deleted": "products",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "item",
        "deleted": "product",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "self",
        "deleted": "products",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "price",
        "deleted": "product",
        "type": "Refactoring"
    }
]