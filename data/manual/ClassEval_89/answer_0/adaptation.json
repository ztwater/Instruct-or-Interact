[
    {
        "action": "INS",
        "label": "param",
        "inserted": "expression",
        "deleted": "",
        "type": "Method_Signature"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "\"\"\"\n        Check if a given mathematical expression using the cards can evaluate to 24.\n        :param expression: string, mathematical expression using the cards\n        :return: bool, True if the expression evaluates to 24, False otherwise\n        >>> game = TwentyFourPointGame()\n        >>> game.nums = [4, 3, 6, 6]\n        >>> ans = \"4*3+6+6\"\n        >>> ret = game.answer(ans)\n        True\n        \"\"\"\n",
        "deleted": "",
        "type": "Documentation"
    },
    {
        "action": "INS",
        "label": "return_stmt",
        "inserted": "return self.evaluate_expression(expression)",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "operator",
        "inserted": ",",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "evaluate_expression",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "parameters",
        "inserted": "(expression)",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "parameters",
        "inserted": "()",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "parameters",
        "inserted": "()",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "expr_stmt",
        "inserted": "self._generate_cards = generate_cards",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "return_stmt",
        "inserted": "return self.nums",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "self",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "trailer",
        "inserted": ".evaluate_expression",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "operator",
        "inserted": "=",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "result",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "operator",
        "inserted": "=",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "trailer",
        "inserted": ".randint",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "number",
        "inserted": "9",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "number",
        "inserted": "4",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "trailer",
        "inserted": "",
        "deleted": "[0]",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "name",
        "inserted": "",
        "deleted": "i",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "operator",
        "inserted": "",
        "deleted": "+",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "atom_expr",
        "inserted": "",
        "deleted": "len(cards)",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "name",
        "inserted": "",
        "deleted": "i",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "operator",
        "inserted": "",
        "deleted": "+",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "name",
        "inserted": "",
        "deleted": "b",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "operator",
        "inserted": "",
        "deleted": ",",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "arith_expr",
        "inserted": "",
        "deleted": "a - b",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "operator",
        "inserted": "",
        "deleted": ",",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "arith_expr",
        "inserted": "",
        "deleted": "b - a",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "operator",
        "inserted": "",
        "deleted": ",",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "term",
        "inserted": "",
        "deleted": "a * b",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "trailer",
        "inserted": "",
        "deleted": "(a / b)",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "name",
        "inserted": "",
        "deleted": "remaining_cards",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "operator",
        "inserted": "",
        "deleted": "=",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "atom_expr",
        "inserted": "",
        "deleted": "cards[k]",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "name",
        "inserted": "",
        "deleted": "k",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "name",
        "inserted": "",
        "deleted": "range",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "trailer",
        "inserted": "",
        "deleted": "(len(cards))",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "name",
        "inserted": "",
        "deleted": "k",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "comparison",
        "inserted": "",
        "deleted": "k != j",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "operator",
        "inserted": "",
        "deleted": "==",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "number",
        "inserted": "",
        "deleted": "1",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "name",
        "inserted": "",
        "deleted": "range",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "trailer",
        "inserted": "",
        "deleted": "(len(cards))",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "name",
        "inserted": "",
        "deleted": "j",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "operator",
        "inserted": "",
        "deleted": "=",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "operator",
        "inserted": "",
        "deleted": "=",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "comparison",
        "inserted": "",
        "deleted": "b != 0",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "name",
        "inserted": "",
        "deleted": "a",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "number",
        "inserted": "",
        "deleted": "0",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "trailer",
        "inserted": "",
        "deleted": ".append",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "trailer",
        "inserted": "",
        "deleted": "(b / a)",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "name",
        "inserted": "",
        "deleted": "result",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "name",
        "inserted": "",
        "deleted": "results",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "simple_stmt",
        "inserted": "",
        "deleted": "remaining_cards.append(result)\n",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "atom_expr",
        "inserted": "",
        "deleted": "answer(remaining_cards)",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "return_stmt",
        "inserted": "",
        "deleted": "return False",
        "type": "Logic"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "i",
        "deleted": "i",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "b",
        "deleted": "b",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "atom_expr",
        "inserted": "remaining_cards.append(result)",
        "deleted": "remaining_cards.append(result)",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "a",
        "deleted": "a",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "atom_expr",
        "inserted": "results.append(a / b)",
        "deleted": "results.append(a / b)",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "operator",
        "inserted": "!=",
        "deleted": "!=",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "results",
        "deleted": "results",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "atom_expr",
        "inserted": "len(cards)",
        "deleted": "len(cards)",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "operator",
        "inserted": "!=",
        "deleted": "!=",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "i",
        "deleted": "i",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "atom_expr",
        "inserted": "len(cards)",
        "deleted": "len(cards)",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "atom_expr",
        "inserted": "cards[j]",
        "deleted": "cards[j]",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "results",
        "deleted": "results",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "atom_expr",
        "inserted": "len(cards)",
        "deleted": "len(cards)",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "cards",
        "deleted": "cards",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "a",
        "deleted": "a",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "atom_expr",
        "inserted": "cards[i]",
        "deleted": "cards[i]",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "number",
        "inserted": "1",
        "deleted": "1",
        "type": "Move"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "self",
        "deleted": "cards",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "generate_cards",
        "deleted": "i",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "get_my_cards",
        "deleted": "b",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "evaluate_expression",
        "deleted": "a",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "operator",
        "inserted": "=",
        "deleted": "!=",
        "type": "Logic"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "generate_cards",
        "deleted": "results",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "operator",
        "inserted": "=",
        "deleted": "!=",
        "type": "Logic"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "get_my_cards",
        "deleted": "i",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "self",
        "deleted": "remaining_cards",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "self",
        "deleted": "results",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "self",
        "deleted": "len",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "evaluate_expression",
        "deleted": "append",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "expression",
        "deleted": "result",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "evaluate_expression",
        "deleted": "results",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "_generate_cards",
        "deleted": "append",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "get_my_cards",
        "deleted": "cards",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "self",
        "deleted": "len",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "self",
        "deleted": "cards",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "nums",
        "deleted": "cards",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "nums",
        "deleted": "j",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "eval",
        "deleted": "len",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "result",
        "deleted": "cards",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "random",
        "deleted": "range",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "_",
        "deleted": "a",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "expression",
        "deleted": "cards",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "range",
        "deleted": "cards",
        "type": "Refactoring"
    }
]