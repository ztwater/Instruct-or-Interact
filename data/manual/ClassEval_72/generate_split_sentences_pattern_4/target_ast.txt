file_input [0,757]
    classdef [0,757]
        name: RegexUtils [6,16]
        suite [17,757]
            funcdef [22,757]
                name: generate_split_sentences_pattern [26,58]
                parameters [58,64]
                    param [59,63]
                        name: self [59,63]
                suite [65,757]
                    simple_stmt [74,402]
                        string: """         Generate regular expression patterns that match the middle characters of two sentences         :return: string, regular expression patterns that match the middle characters of two sentences         >>> ru = RegexUtils()         >>> ru.generate_split_sentences_pattern()         '[.!?][\s]{1,2}(?=[A-Z])'         """ [74,401]
                    simple_stmt [468,509]
                        expr_stmt [468,508]
                            name: middle1 [468,475]
                            operator: = [476,477]
                            atom_expr [478,508]
                                name: sentence1 [478,487]
                                trailer [487,508]
                                    term [488,507]
                                        atom_expr [488,502]
                                            name: len [488,491]
                                            trailer [491,502]
                                                name: sentence1 [492,501]
                                        operator: // [503,505]
                                        number: 2 [506,507]
                    simple_stmt [585,626]
                        expr_stmt [585,625]
                            name: middle2 [585,592]
                            operator: = [593,594]
                            atom_expr [595,625]
                                name: sentence2 [595,604]
                                trailer [604,625]
                                    term [605,624]
                                        atom_expr [605,619]
                                            name: len [605,608]
                                            trailer [608,619]
                                                name: sentence2 [609,618]
                                        operator: // [620,622]
                                        number: 2 [623,624]
                    simple_stmt [693,726]
                        expr_stmt [693,725]
                            name: pattern [693,700]
                            operator: = [701,702]
                            fstring [703,725]
                                fstring_start: f" [703,705]
                                fstring_expr [705,714]
                                    operator: { [705,706]
                                    name: middle1 [706,713]
                                    operator: } [713,714]
                                fstring_string: . [714,715]
                                fstring_expr [715,724]
                                    operator: { [715,716]
                                    name: middle2 [716,723]
                                    operator: } [723,724]
                                fstring_end: " [724,725]
                    return_stmt [743,757]
                        name: pattern [750,757]