file_input [0,519]
    classdef [0,519]
        name: RegexUtils [6,16]
        suite [17,519]
            funcdef [22,519]
                name: generate_split_sentences_pattern [26,58]
                parameters [58,64]
                    param [59,63]
                        name: self [59,63]
                suite [65,519]
                    simple_stmt [74,402]
                        string: """         Generate regular expression patterns that match the middle characters of two sentences         :return: string, regular expression patterns that match the middle characters of two sentences         >>> ru = RegexUtils()         >>> ru.generate_split_sentences_pattern()         '[.!?][\s]{1,2}(?=[A-Z])'         """ [74,401]
                    simple_stmt [410,424]
                        expr_stmt [410,423]
                            name: middle1 [410,417]
                            operator: = [418,419]
                            string: "." [420,423]
                    simple_stmt [432,446]
                        expr_stmt [432,445]
                            name: middle2 [432,439]
                            operator: = [440,441]
                            string: "." [442,445]
                    simple_stmt [454,497]
                        expr_stmt [454,496]
                            name: pattern [454,461]
                            operator: = [462,463]
                            fstring [464,496]
                                fstring_start: f" [464,466]
                                fstring_string: [ [466,467]
                                fstring_expr [467,476]
                                    operator: { [467,468]
                                    name: middle1 [468,475]
                                    operator: } [475,476]
                                fstring_string: ][\s] [476,481]
                                fstring_expr [481,486]
                                    operator: { [481,482]
                                    testlist_comp [482,485]
                                        number: 1 [482,483]
                                        operator: , [483,484]
                                        number: 2 [484,485]
                                    operator: } [485,486]
                                fstring_string: (?=[A-Z]) [486,495]
                                fstring_end: " [495,496]
                    return_stmt [505,519]
                        name: pattern [512,519]