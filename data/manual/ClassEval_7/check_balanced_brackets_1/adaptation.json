[
    {
        "action": "INS",
        "label": "name",
        "inserted": "self",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "trailer",
        "inserted": ".expr",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "len",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "trailer",
        "inserted": "(self.stack)",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "self",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "trailer",
        "inserted": ".left_brackets",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "self",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "trailer",
        "inserted": ".right_brackets",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "self",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "trailer",
        "inserted": ".stack",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "self",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "trailer",
        "inserted": ".stack",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "self",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "trailer",
        "inserted": ".left_brackets",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "self",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "trailer",
        "inserted": ".right_brackets",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "self",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "trailer",
        "inserted": ".stack",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "simple_stmt",
        "inserted": "",
        "deleted": "stack = []\n",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "name",
        "inserted": "",
        "deleted": "opening_brackets",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "operator",
        "inserted": "",
        "deleted": "=",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "operator",
        "inserted": "",
        "deleted": ",",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "string",
        "inserted": "",
        "deleted": "'['",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "operator",
        "inserted": "",
        "deleted": ",",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "string",
        "inserted": "",
        "deleted": "'{'",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "simple_stmt",
        "inserted": "",
        "deleted": "closing_brackets = [')', ']', '}']\n",
        "type": "Logic"
    },
    {
        "action": "MOV",
        "label": "string",
        "inserted": "'('",
        "deleted": "'('",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "expression",
        "deleted": "expression",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "atom_expr",
        "inserted": "len(stack)",
        "deleted": "len(stack)",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "opening_brackets",
        "deleted": "opening_brackets",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "closing_brackets",
        "deleted": "closing_brackets",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "stack",
        "deleted": "stack",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "stack",
        "deleted": "stack",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "opening_brackets",
        "deleted": "opening_brackets",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "closing_brackets",
        "deleted": "closing_brackets",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "stack",
        "deleted": "stack",
        "type": "Move"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "self",
        "deleted": "expression",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "string:",
        "inserted": "\"\"\"\n        Checks if the expression has balanced brackets.\n        :return: True if the expression has balanced brackets, False otherwise.\n        \"\"\"",
        "deleted": "'('",
        "type": "Logic"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "expr",
        "deleted": "expression",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "self",
        "deleted": "len",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "left_brackets",
        "deleted": "opening_brackets",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "right_brackets",
        "deleted": "closing_brackets",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "left_brackets",
        "deleted": "opening_brackets",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "right_brackets",
        "deleted": "closing_brackets",
        "type": "Refactoring"
    }
]