[
    {
        "action": "INS",
        "label": "param",
        "inserted": "self,",
        "deleted": "",
        "type": "Method_Signature"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "\"\"\"\n        Insert data into the specified table in the database.\n        :param table_name: str, the name of the table to insert data into.\n        :param data: list, a list of dictionaries where each dictionary represents a row of data.\n        \"\"\"\n",
        "deleted": "",
        "type": "Documentation"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "conn.close()\n",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "data",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "values = tuple(row.values())\n",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "placeholders = ', '.join(['?'] * len(row))\n",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "query",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "operator",
        "inserted": "=",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "cursor",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "self",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "fstring_expr",
        "inserted": "{placeholders}",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "fstring_string",
        "inserted": ")",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "database_name",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "query",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "string",
        "inserted": "",
        "deleted": "'database.db'",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "arglist",
        "inserted": "",
        "deleted": "f\"INSERT INTO {table_name} VALUES (?, ?, ?)\", data",
        "type": "Logic"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "cursor",
        "deleted": "cursor",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "atom_expr",
        "inserted": "conn.close()",
        "deleted": "conn.close()",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "fstring",
        "inserted": "f\"INSERT INTO {table_name} VALUES (?, ?, ?)\"",
        "deleted": "f\"INSERT INTO {table_name} VALUES (?, ?, ?)\"",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "trailer",
        "inserted": ".execute",
        "deleted": ".execute",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "trailer",
        "inserted": "('database.db')",
        "deleted": "('database.db')",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "operator",
        "inserted": ",",
        "deleted": ",",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "data",
        "deleted": "data",
        "type": "Move"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "row",
        "deleted": "cursor",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "fstring_string:",
        "inserted": " VALUES (",
        "deleted": " VALUES (?, ?, ?)",
        "type": "Logic"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "values",
        "deleted": "data",
        "type": "Refactoring"
    }
]