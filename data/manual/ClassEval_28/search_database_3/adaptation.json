[
    {
        "action": "INS",
        "label": "param",
        "inserted": "self,",
        "deleted": "",
        "type": "Method_Signature"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "\"\"\"\n        Search the specified table in the database for rows with a matching name.\n        :param table_name: str, the name of the table to search.\n        :param name: str, the name to search for.\n        :return: list, a list of tuples representing the rows with matching name, if any;\n                    otherwise, returns None.\n        >>> db.search_database('user', 'John')\n        [(1, 'John', 25)]\n        \"\"\"\n",
        "deleted": "",
        "type": "Documentation"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "conn.close()\n",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "return_stmt",
        "inserted": "return rows",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "self",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "database_name",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "string",
        "inserted": "",
        "deleted": "'database.db'",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "for_stmt",
        "inserted": "",
        "deleted": "for row in rows:\n            print(row)\n",
        "type": "Logic"
    },
    {
        "action": "MOV",
        "label": "atom_expr",
        "inserted": "conn.close()",
        "deleted": "conn.close()",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "trailer",
        "inserted": "('database.db')",
        "deleted": "('database.db')",
        "type": "Move"
    }
]