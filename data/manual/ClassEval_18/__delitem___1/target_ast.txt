file_input [0,532]
    classdef [0,532]
        name: CamelCaseMap [6,18]
        suite [19,532]
            funcdef [24,532]
                name: __delitem__ [28,39]
                parameters [39,50]
                    param [40,45]
                        name: self [40,44]
                        operator: , [44,45]
                    param [46,49]
                        name: key [46,49]
                suite [51,532]
                    simple_stmt [60,380]
                        string: """         Delete the value corresponding to the key         :param key:str         :return:None         >>> camelize_map = CamelCaseMap()         >>> camelize_map['first_name'] = 'John'         >>> camelize_map.__delitem__('first_name')         >>> flag = 'first_name' in camelize_map         flag = False         """ [60,379]
                    if_stmt [388,532]
                        comparison [391,408]
                            name: key [391,394]
                            atom_expr [398,408]
                                name: self [398,402]
                                trailer [402,408]
                                    name: _data [403,408]
                        suite [409,442]
                            simple_stmt [422,442]
                                del_stmt [422,441]
                                    atom_expr [426,441]
                                        name: self [426,430]
                                        trailer [430,436]
                                            name: _data [431,436]
                                        trailer [436,441]
                                            name: key [437,440]
                        suite [455,532]
                            raise_stmt [468,532]
                                atom_expr [474,532]
                                    name: KeyError [474,482]
                                    trailer [482,532]
                                        fstring [483,531]
                                            fstring_start: f" [483,485]
                                            fstring_string: Key ' [485,490]
                                            fstring_expr [490,495]
                                                operator: { [490,491]
                                                name: key [491,494]
                                                operator: } [494,495]
                                            fstring_string: ' does not exist in the dictionary. [495,530]
                                            fstring_end: " [530,531]