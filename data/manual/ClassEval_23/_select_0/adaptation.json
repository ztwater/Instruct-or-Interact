[
    {
        "action": "INS",
        "label": "param",
        "inserted": "resultIndex: int,",
        "deleted": "",
        "type": "Method_Signature"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "\"\"\"\n        Generate combinations with a specified number of elements by recursion.\n        :param dataIndex: The index of the data to be selected, int.\n        :param resultList: The list of elements in the combination, List[str].\n        :param resultIndex: The index of the element in the combination, int.\n        :param result: The list of combinations, List[List[str]].\n        :return: None.\n        \"\"\"\n",
        "deleted": "",
        "type": "Documentation"
    },
    {
        "action": "INS",
        "label": "operator",
        "inserted": ",",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "int",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "atom_expr",
        "inserted": "List[str]",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "result",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "resultIndex",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "return\n",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "List",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "trailer",
        "inserted": "[List[str]]",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "trailer",
        "inserted": "._select",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "trailer",
        "inserted": "(resultList.copy())",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "dataIndex",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "operator",
        "inserted": ",",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "trailer",
        "inserted": "[resultIndex]",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "self",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "trailer",
        "inserted": ".datas",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "operator",
        "inserted": ",",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "operator",
        "inserted": ",",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "self",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "operator",
        "inserted": "",
        "deleted": "=",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "atom",
        "inserted": "",
        "deleted": "[]",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "operator",
        "inserted": "",
        "deleted": "=",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "subscript",
        "inserted": "",
        "deleted": "i+1:",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "name",
        "inserted": "",
        "deleted": "combination",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "name",
        "inserted": "",
        "deleted": "_select",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "arglist",
        "inserted": "",
        "deleted": "remaining_elements, k-1",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "trailer",
        "inserted": "",
        "deleted": "([first_element] + combination)",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "parameters",
        "inserted": "",
        "deleted": "(elements, k)",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "number",
        "inserted": "",
        "deleted": "0",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "number",
        "inserted": "",
        "deleted": "0",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "operator",
        "inserted": "",
        "deleted": "<",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "name",
        "inserted": "",
        "deleted": "k",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "return_stmt",
        "inserted": "",
        "deleted": "return result",
        "type": "Logic"
    },
    {
        "action": "MOV",
        "label": "param",
        "inserted": "elements,",
        "deleted": "elements,",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "operator",
        "inserted": "==",
        "deleted": "==",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "k",
        "deleted": "k",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "operator",
        "inserted": "==",
        "deleted": "==",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "atom_expr",
        "inserted": "len(elements)",
        "deleted": "len(elements)",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "remaining_elements",
        "deleted": "remaining_elements",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "atom_expr",
        "inserted": "len(elements)",
        "deleted": "len(elements)",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "result",
        "deleted": "result",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "trailer",
        "inserted": ".append",
        "deleted": ".append",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "elements",
        "deleted": "elements",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "first_element",
        "deleted": "first_element",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "arith_expr",
        "inserted": "i+1",
        "deleted": "i+1",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "remaining_elements",
        "deleted": "remaining_elements",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "operator",
        "inserted": ",",
        "deleted": ",",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "arith_expr",
        "inserted": "k-1",
        "deleted": "k-1",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "result",
        "deleted": "result",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "elements",
        "deleted": "elements",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "trailer",
        "inserted": "(elements)",
        "deleted": "(elements)",
        "type": "Move"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "self",
        "deleted": "elements",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "operator",
        "inserted": ",",
        "deleted": "==",
        "type": "Logic"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "dataIndex",
        "deleted": "k",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "resultList",
        "deleted": "k",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "self",
        "deleted": "remaining_elements",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "resultList",
        "deleted": "elements",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "_select",
        "deleted": "elements",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "List",
        "deleted": "len",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "resultList",
        "deleted": "first_element",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "resultList",
        "deleted": "remaining_elements",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "str",
        "deleted": "elements",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "datas",
        "deleted": "elements",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "resultIndex",
        "deleted": "k",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "operator",
        "inserted": "+",
        "deleted": "-",
        "type": "Logic"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "datas",
        "deleted": "elements",
        "type": "Refactoring"
    }
]