[
    {
        "action": "INS",
        "label": "operator",
        "inserted": "->",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "int",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "\"\"\"\n        Calculate the number of combinations for a specific count.\n        :param n: The total number of elements, int.\n        :param m: The number of elements in each combination, int.\n        :return: The number of combinations, int.\n        \"\"\"\n",
        "deleted": "",
        "type": "Documentation"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "int",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "name",
        "inserted": "int",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "arglist",
        "inserted": "n, m",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "arith_expr",
        "inserted": "",
        "deleted": "n-r",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "atom_expr",
        "inserted": "",
        "deleted": "factorial(n)",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "operator",
        "inserted": "",
        "deleted": "//",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "atom_expr",
        "inserted": "",
        "deleted": "factorial(r)",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "operator",
        "inserted": "",
        "deleted": "*",
        "type": "Logic"
    },
    {
        "action": "DEL",
        "label": "name",
        "inserted": "",
        "deleted": "factorial",
        "type": "Logic"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "n",
        "deleted": "n",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "r",
        "deleted": "r",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "factorial",
        "deleted": "factorial",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "trailer",
        "inserted": "(n)",
        "deleted": "(n)",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "n",
        "deleted": "n",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "operator",
        "inserted": "-",
        "deleted": "-",
        "type": "Move"
    },
    {
        "action": "MOV",
        "label": "name",
        "inserted": "r",
        "deleted": "r",
        "type": "Move"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "m",
        "deleted": "r",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "math",
        "deleted": "factorial",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "comb",
        "deleted": "n",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "operator",
        "inserted": ",",
        "deleted": "-",
        "type": "Logic"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "m",
        "deleted": "r",
        "type": "Refactoring"
    }
]