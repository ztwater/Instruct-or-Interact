[
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "\"\"\"\n        Send information containing address and content\n        :param info: dict, information dictionary containing address and content\n        :return: if successfully sent, return nothing; otherwise, return a string indicating an error message\n        >>> server.send({\"addr\":66,\"content\":\"ABC\"})\n        self.send_struct = {\"addr\":66,\"content\":\"ABC\"}\n        \"\"\"\n",
        "deleted": "",
        "type": "Documentation"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "address = info[\"addr\"]\n",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "content = info[\"content\"]\n",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "simple_stmt",
        "inserted": "print(\"Content:\", content)\n",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "INS",
        "label": "expr_stmt",
        "inserted": "self.send_struct = info",
        "deleted": "",
        "type": "Logic"
    },
    {
        "action": "MOV",
        "label": "atom_expr",
        "inserted": "print(\"Content:\", content)",
        "deleted": "print(\"Content:\", content)",
        "type": "Move"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "self",
        "deleted": "address",
        "type": "Refactoring"
    },
    {
        "action": "UPD",
        "label": "name",
        "inserted": "info",
        "deleted": "content",
        "type": "Refactoring"
    }
]