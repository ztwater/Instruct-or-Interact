file_input [0,710]
    classdef [0,709]
        name: DiscountStrategy [6,22]
        suite [23,709]
            funcdef [28,709]
                name: due [32,35]
                parameters [35,41]
                    param [36,40]
                        name: self [36,40]
                suite [42,709]
                    simple_stmt [51,446]
                        string: """         Calculate the final amount to be paid after applying the discount.         :return: float, final amount to be paid         >>> customer = {'name': 'John Doe', 'fidelity': 1200}         >>> cart = [{'product': 'product', 'quantity': 14, 'price': 23.5}]         >>> ds = DiscountStrategy(customer, cart, DiscountStrategy.FidelityPromo)         >>> ds.due()         312.55          """ [51,445]
                    simple_stmt [517,545]
                        expr_stmt [517,544]
                            name: total_amount [517,529]
                            operator: = [530,531]
                            atom_expr [532,544]
                                name: self [532,536]
                                trailer [536,542]
                                    name: total [537,542]
                                trailer [542,544]
                    if_stmt [605,680]
                        atom_expr [608,622]
                            name: self [608,612]
                            trailer [612,622]
                                name: promotion [613,622]
                        suite [623,680]
                            simple_stmt [636,680]
                                expr_stmt [636,679]
                                    name: total_amount [636,648]
                                    operator: = [649,650]
                                    atom_expr [651,679]
                                        name: self [651,655]
                                        trailer [655,665]
                                            name: promotion [656,665]
                                        trailer [665,679]
                                            name: total_amount [666,678]
                    simple_stmt [689,709]
                        return_stmt [689,708]
                            name: total_amount [696,708]